version: "3.9"
services:
  redis:
    container_name: redis_videoanalytics
    image: redis:alpine
    ports:
      - 6379:6379
    networks:
      - django_network

  postgres:
    container_name: postgres_videoanalytics
    image: postgres:latest
    environment:
      - POSTGRES_DB=my_database
      - POSTGRES_USER=my_username
      - POSTGRES_PASSWORD=my_password
    networks:
      - django_network
    volumes:
      - ./data:/var/lib/postgresql/data

  django:
    container_name: django_videoanalytics
    build:
      context: ./videoanalytics/
      dockerfile: Dockerfile
    entrypoint: /app/entrypoint.sh
    expose:
      - 8000
    depends_on:
      - postgres
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=my_database
      - POSTGRES_USER=my_username
      - POSTGRES_PASSWORD=my_password
    env_file:
      - .env
    networks:
      - django_network
    # ${DEVICES}:
      # ${DEVICES_DASH} /dev/video0:/dev/video0
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./videoanalytics/data:/data
      - static_volume:/var/www/static

  nginx:
    container_name: nginx_videoanalytics
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/var/www/static
    ports:
      - 8100:8100
    depends_on:
      - django
    networks:
      - django_network

  celery_worker:
    container_name: celery_worker_videoanalytics
    restart: always
    hostname: celery_worker
    build:
      context: ./videoanalytics
      dockerfile: Dockerfile
    command: ['celery', '-A', 'backend.celery_app', 'worker' ]
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./videoanalytics/data:/data
    env_file:
      - .env
    depends_on:
      - redis
    links:
      - redis
    networks:
      - django_network

  flower_worker:
    container_name: flower_worker_videoanalytics
    restart: always
    hostname: flower_worker
    build:
      context: ./videoanalytics
      dockerfile: Dockerfile
    ports:
      - 5555:5555
    command: ['celery', '-A', 'backend.celery_app', 'flower' ]
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./videoanalytics/data:/data
    env_file:
      - .env
    depends_on:
      - redis
    links:
      - redis
    networks:
      - django_network

  grafana:
    container_name: grafana_videoanalytics
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    volumes:
    - ./grafana/init.sh:/init.sh
    - ./grafana/celery-monitoring-grafana-dashboard.json:/celery-monitoring-grafana-dashboard.json
    command: sh /init.sh
    networks:
      - django_network

  prometheus:
    container_name: prometheus_videoanalytics
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    networks:
      - django_network

  node_exporter:
    container_name: node_exporter_videoanalytics
    image: prom/node-exporter:latest
    ports:
      - 9100:9100
    networks:
      - django_network

volumes:
  static_volume:

networks:
  django_network:
    driver: bridge
